@model HealthBridge.BusinessLogic.DTO.CompoundInvoiceDTO
@{
    ViewBag.Title = "InvoiceForm";
    int i = 0;
}

<h2>Invoice Form</h2>
<br />
<form id="invoiceForm">
    <div class="form-group">
        <div class="row">
            <div class="col-md-2">
                <strong>Invoice Date:</strong>
            </div>
            <div class="col-md-3">
                @Html.DisplayFor(x => x.InvoiceDetails.InvoiceDateTime)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-md-2">
                <strong>Patient:</strong>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.InvoiceDetails.PatientId, new SelectList(ViewBag.PatientDropDown, "PatientId", "DisplayName"), null, new { @class = "form-control", id = "ddlPatient" })
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-heading"><center><span style="font-size:34px;">Line Items</span></center></div>
            <div class="panel-body" id="tableBody">
                @*<div class="col-md-3">
                        <label style="display:inline-block;">QTY</label>
                        <input type="number" class="form-control input-group-lg" id="txtQty" />
                    </div>*@
                <div class="form-group">
                    <label for="QTY" class="pull-left">QTY:</label>
                    <div class="col-sm-2">
                        <input type="number" min="1" step="1" class="form-control" name="QTY" id="txtQty" style="width:90px;">
                    </div>

                    <label for="code" class="pull-left">Code:</label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control" name="code" id="txtCode" style="width:120px;">
                    </div>

                    <label for="description" class="pull-left">Description:</label>
                    <div class="col-sm-3">
                        <textarea class="form-control" name="description" id="txtDescription"></textarea>
                    </div>

                    <label for="amount" class="pull-left">Total:</label>
                    <div class="col-sm-1">
                        <input type="number" min="1" class="form-control" name="amount" id="txtLineItemTotal" style="width:150px;">
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group pull-left">
                            @if (Model.InvoiceDetails.InvoiceId != 0)
                            {
                                <button type="button" class="btn btn-info" id="btnUpdateInvoice">Update Invoice</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-info" id="btnSaveInvoice" disabled>Save Invoice</button>
                            }
                        </div>
                        <div class="form-group pull-right">
                            @if (Model.InvoiceDetails.InvoiceId == 0)
                            {
                                <button type="button" class="btn btn-primary" id="btnAddLineItem">Add To Invoice</button>
                                <button type="button" class="btn btn-default" id="btnUpdateLineItem">Update Line Item</button>
                                <button type="button" class="btn btn-danger" id="btnCancelLineItemUpdate">Cancel</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-primary" id="btnExistingInvoiceAddItem">Add To Invoice</button>
                                <button type="button" class="btn btn-default" id="btnExistingInvoiceUpdateLineItem">Update Line Item</button>
                                <button type="button" class="btn btn-danger" id="btnExistingInvoiceCancelLineItemUpdate">Cancel</button>
                            }
                        </div>
                    </div>
                </div>
                <table style="width:100%;" id="tblLineItems" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>QTY</th>
                            <th>Code</th>
                            <th>Description</th>
                            <th>Total</th>
                            <th style="width:20%;">Options</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*check line item list to see for items then add to tbody*@
                        @if (Model.InvoiceLineItems.Count > 0)
                        {
                            foreach (var lineItem in Model.InvoiceLineItems)
                            {
                                <tr id="@("lineItem" + lineItem.InvoiceLineId)">
                                    <td id="@("qtytd" + lineItem.InvoiceLineId)">@lineItem.Qty</td>
                                    <td id="@("codetd" + lineItem.InvoiceLineId)">@lineItem.Code</td>
                                    <td id="@("desctd" + lineItem.InvoiceLineId)">@lineItem.Description</td>
                                    <td id="@("linetottd" + lineItem.InvoiceLineId)">
                                        R @lineItem.LineTotal.ToString().Replace(",", ".").Trim()
                                    </td>
                                    <td>
                                        <button type="button" onclick="EditLineItem(@lineItem.InvoiceLineId)" class="btn btn-warning btn-sm" style="width:45%">Edit</button>&nbsp;&nbsp;
                                        <button onclick="DeleteLineItemFromTable(this, @lineItem.InvoiceLineId)" class="btn btn-danger btn-sm" style="width:45%">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <div>
                </div>
                <div class="form-group">
                    <div class="pull-right">
                        <label id="lblTotalInvoiceAmount">Total: R @Model.InvoiceLineItems.Sum(x => x.LineTotal)</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<input type="hidden" id="tblColCount" value="0" />
@Html.HiddenFor(x => x.InvoiceDetails.InvoiceId, new { id = "hdInvoiceId" })
<input type="hidden" id="lineEditLineID" value="" />
@*@if (Model.InvoiceLineItems.Count > 0)
    {
        <input type="hidden" id"hdInitialLineID" value="@Model.InvoiceLineItems[0].InvoiceLineId" />
    }
    else
    {
        <input type="hidden" id"hdInitialLineID" value="" />
    }*@


@section scripts{
    <script>
        var lineItems = [];
    $(document).ready(function () {
            $("#ddlPatient").attr("disabled", false);
            $("#btnUpdateLineItem").hide();
            $("#btnCancelLineItemUpdate").hide();
            $("#btnExistingInvoiceUpdateLineItem").hide();
            $("#btnExistingInvoiceCancelLineItemUpdate").hide();
            var lineItemIDForUpdate;
            if ($("#hdInitialLineID").val() != '') {
                lineItemIDForUpdate= parseInt($("#hdInitialLineID").val());
            }
            console.log($("#ddlPatient").val());
            if ($("#ddlPatient").val() !== '0') {
                $("#ddlPatient").attr("disabled", true);
                var uploadedList = @Html.Raw(Json.Encode(Model.InvoiceLineItems));

                for (var i = 0; i < uploadedList.length; i++) {
                    var newLineItem = {
                        InvoiceLineId: uploadedList[i].InvoiceLineId,
                        QTY: uploadedList[i].Qty,
                        Code: uploadedList[i].Code,
                        Description: uploadedList[i].Description,
                        LineTotal: uploadedList[i].LineTotal
                    }
                    lineItems.push(newLineItem);
                    lineItemIDForUpdate++;
                }
                console.log(lineItems);
            }

        });

        $("#ddlPatient").change(function () {
            if (this.value == '') {
                $("#btnSaveInvoice").prop("disabled", true);
            } else {
                $("#btnSaveInvoice").prop("disabled", false);
            }
        });



        $("#btnAddLineItem").click(function () {
            var qty = $("#txtQty").val()
            var code = $("#txtCode").val();
            var description = $("#txtDescription").val();
            var lineTotal = $("#txtLineItemTotal").val();
            if (qty == '' || code == '' || description == '' || lineTotal == '') {
                bootbox.alert({
                    message: 'Please enter all line item fields',
                    size: 'small',
                    centerVertical: true
                });
                return false;
            }
            var newLineItem = {
                InvoiceLineId: $("#tblColCount").val(),
                QTY: qty,
                Code: code,
                Description: description,
                LineTotal: lineTotal
            }
            lineItems.push(newLineItem);
            var currColCount = parseInt($("#tblColCount").val());
            $('#tblLineItems > tbody:first').append('<tr id="lineItem' + currColCount + '"><td id="qtytd' + currColCount + '">' + qty + '</td><td id="codetd' + currColCount + '">' + code + '</td><td id="desctd' + currColCount + '">' + description + '</td><td id="linetottd' + currColCount + '">R ' + lineTotal +
                '</td><td><button type="button" onclick="EditLineItem(' + currColCount + ')" class="btn btn-warning btn-sm" style="width:45%">Edit</button>&nbsp;&nbsp;<button onclick="DeleteLineItemFromTable(this, ' + currColCount + ')" class="btn btn-danger btn-sm" style="width:45%">Delete</button></td></tr>');

            var newColCount = parseInt($("#tblColCount").val());
            newColCount = newColCount + 1;
            $("#tblColCount").val(newColCount);
            ClearTextboxes();
            $("#lblTotalInvoiceAmount").text('Total: R ' + lineItems.reduce((a, b) => +a + +b.LineTotal, 0));
        });

        $("#btnSaveInvoice").click(function () {
            var invoiceDetail = {
                PatientId: $("#ddlPatient").val()
            }
            if ($("#ddlPatient").val() == '') {
                bootbox.alert({
                    message: 'Please select a patient',
                    size: 'small',
                    centerVertical: true
                });
                return false;
            }
            //Validate that a patient has been selected
            //Validate that there are line items
            //If 1 of the above validations fail do not save a new invoice
            //Alert the user with validation errors
            $.ajax(
                {
                    url: "/api/Invoices/savenewinvoice/",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ InvoiceDetails: invoiceDetail, InvoiceLineItems: lineItems }),
                    success: function (result) {
                        bootbox.alert({
                            message: result,
                            size: 'small',
                            centerVertical: true
                        });
                        $("#tblLineItems > tbody").html("");
                        ClearTextboxes();
                        $("#tblColCount").val(1);
                        $("#lineEditLineID").val("");
                        lineItems = [];
                        $("#lineEditLineID").text('');
                    }
                }
            );
        });

        function DeleteLineItemFromTable(el, colIndex) {
            $(el).closest('tr').remove();
            $.each(lineItems, function (i) {
                if (lineItems[i].InvoiceLineId == colIndex) {
                    lineItems.splice(i, 1);
                    return false;
                }
            });
            $("#lblTotalInvoiceAmount").text('Total: R ' + lineItems.reduce((a, b) => +a + +b.LineTotal, 0));
        };

        function ClearTextboxes() {
            $("#txtQty").val("");
            $("#txtCode").val("");
            $("#txtDescription").val("");
            $("#txtLineItemTotal").val("");
        };

        function EditLineItem(el) {
            //lineEditMode
            //$("#hdInvoiceId").val(el);
            //console.log('HDLineID',$("#hdInvoiceId").val());
            if ($("#hdInvoiceId").val() != 0) {
                $("#btnExistingInvoiceUpdateLineItem").show();
                $("#btnExistingInvoiceCancelLineItemUpdate").show();
                $("#btnExistingInvoiceAddItem").hide();
            } else {
                $("#btnUpdateLineItem").show();
                $("#btnCancelLineItemUpdate").show();
                $("#btnAddLineItem").hide();
            }
            $("#lineEditLineID").val(el);


            $("#txtQty").val($("#qtytd" + el).text());
            $("#txtCode").val($("#codetd" + el).text());
            $("#txtDescription").val($("#desctd" + el).text());
            var lineTotal = $("#linetottd" + el).text();
            lineTotal = lineTotal.replace('R ', '');
            var lineTot = parseFloat(lineTotal);
            $("#txtLineItemTotal").val(lineTot);
        }

        $("#btnCancelLineItemUpdate").click(function () {
            $("#btnUpdateLineItem").hide();
            $("#btnCancelLineItemUpdate").hide();
            $("#btnAddLineItem").show();
        });

        $("#btnExistingInvoiceCancelLineItemUpdate").click(function () {
            ClearTextboxes();
            $("#btnExistingInvoiceUpdateLineItem").hide();
            $("#btnExistingInvoiceCancelLineItemUpdate").hide();
            $("#btnExistingInvoiceAddItem").show();
        });

        $("#btnUpdateLineItem").click(function () {

            for (var i in lineItems) {
                if (lineItems[i].InvoiceLineId == $("#lineEditLineID").val()) {
                    lineItems[i].Description = $("#txtDescription").val();
                    lineItems[i].QTY = $("#txtQty").val();
                    lineItems[i].LineTotal = $("#txtLineItemTotal").val();
                    lineItems[i].Code = $("#txtCode").val();

                    $("#desctd" + lineItems[i].InvoiceLineId).text(lineItems[i].Description);
                    $("#qtytd" + lineItems[i].InvoiceLineId).text(lineItems[i].QTY);
                    $("#codetd" + lineItems[i].InvoiceLineId).text(lineItems[i].Code);
                    $("#linetottd" + lineItems[i].InvoiceLineId).text('R ' + lineItems[i].LineTotal);
                    break; //Stop this loop, we found it!
                }
            }
            ClearTextboxes();
            $("#hdInvoiceId").val('');
            $("#btnUpdateLineItem").hide();
            $("#btnCancelLineItemUpdate").hide();
            $("#btnAddLineItem").show();
        });



        $("#btnExistingInvoiceUpdateLineItem").click(function () {

            for (var i in lineItems) {
                if (lineItems[i].InvoiceLineId == $("#lineEditLineID").val()) {
                    lineItems[i].Description = $("#txtDescription").val();
                    lineItems[i].QTY = $("#txtQty").val();
                    lineItems[i].LineTotal = $("#txtLineItemTotal").val();
                    lineItems[i].Code = $("#txtCode").val();
                    $("#desctd" + lineItems[i].InvoiceLineId).text(lineItems[i].Description);
                    $("#qtytd" + lineItems[i].InvoiceLineId).text(lineItems[i].QTY);
                    $("#codetd" + lineItems[i].InvoiceLineId).text(lineItems[i].Code);
                    $("#linetottd" + lineItems[i].InvoiceLineId).text('R ' + lineItems[i].LineTotal);
                    break; //Stop this loop, we found it!
                }
            }
            // Update the database here for this line item only

            var invoiceDetail = {
                InvoiceId: $("#hdInvoiceId").val(),
                PatientId: $("#ddlPatient").val()
            }

            var invoiceLineItemToUpdate = {
                InvoiceLineId: $("#lineEditLineID").val(),
                InvoiceId: $("#hdInvoiceId").val(),
                Qty: $("#txtQty").val(),
                Code: $("#txtCode").val(),
                Description: $("#txtDescription").val(),
                LineTotal: $("#txtLineItemTotal").val()
            }

            console.log('Item To Update', invoiceLineItemToUpdate);

            if ($("#ddlPatient").val() == '') {
                bootbox.alert({
                    message: 'Please select a patient',
                    size: 'small',
                    centerVertical: true
                });
                return false;
            }
            //Validate that a patient has been selected
            //Validate that there are line items
            //If 1 of the above validations fail do not save a new invoice
            //Alert the user with validation errors
            $.ajax(
                {
                    url: "/api/Invoices/updatepreviousinvoice/",
                    type: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify({ InvoiceDetails: invoiceDetail, InvoiceLineItem: invoiceLineItemToUpdate }),
                    success: function (result) {
                        bootbox.alert({
                            message: result,
                            size: 'small',
                            centerVertical: true
                        });
                        $("#desctd" + $("#lineEditLineID").val()).text($("#txtDescription").val());
                        $("#qtytd" + $("#lineEditLineID").val()).text($("#txtQty").val());
                        $("#codetd" + $("#lineEditLineID").val()).text($("#txtCode").val());
                        $("#linetottd" + $("#lineEditLineID").val()).text('R ' + $("#txtLineItemTotal").val());
                        ClearTextboxes();
                        //$("#tblColCount").val(1);
                        $("#lineEditLineID").val("");
                        //lineItems = [];
                        $("#lineEditLineID").text('');
                        //$("#hdInvoiceId").val('');
                        ClearTextboxes();
                        console.log(lineItems);
                        $("#lblTotalInvoiceAmount").text('Total: R ' + lineItems.reduce((a, b) => +a + +b.LineTotal, 0));
                    }
                }
            );


            $("#btnExistingInvoiceUpdateLineItem").hide();
            $("#btnExistingInvoiceCancelLineItemUpdate").hide();
            $("#btnExistingInvoiceAddItem").show();
        });
    </script>
}